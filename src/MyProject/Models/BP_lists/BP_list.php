<?php

namespace MyProject\Models\BP_lists;
use MyProject\Models\Users\User;

use MyProject\Models\ActiveRecordEntity;

class BP_list extends ActiveRecordEntity
{
    /** @var string */
    protected $type;

    /** @var string */
    protected $value;

    /** @var string */
    protected $title;

    /** @var string */
    protected $state;

    /**
     * @return string
     */
    public function getType(): string
    {
        return $this->type;
    }

    /**
     * @return string
     */
    public function getValue(): string
    {
        return $this->value;
    }

    /**
     * @return string
     */
    public function getTitle(): string
    {
        return $this->title;
    }

    /**
     * @return string
     */
    public function getState(): string
    {
        return $this->state;
    }

    protected static function getTableName(): string
    {
        return 'bp_list';
    }

    /**
     * @return int
     */


    public function setType($type): string
    {
        return $this->type=$type;
    }

    public function setValue($value): string
    {
        return $this->value=$value;
    }

    public function setState($state): string
    {
        return $this->state=$state;
    }

/*
    public static function getById(int $id): ?self
    {
        return parent::getById($id); // TODO: Change the autogenerated stub
    }
*/


/*
    public static function createFromArray(array $fields, User $author): Article
    {
        if (empty($fields['name'])) {
            throw new InvalidArgumentException('Не передано название статьи');
        }

        if (empty($fields['text'])) {
            throw new InvalidArgumentException('Не передан текст статьи');
        }

        $article = new Article();

        $article->setAuthor($author);
        $article->setName($fields['name']);
        $article->setText($fields['text']);

        $article->save();

        return $article;
    }

    public function updateFromArray(array $fields): Article
    {
        if (empty($fields['name'])) {
            throw new InvalidArgumentException('Не передано название статьи');
        }

        if (empty($fields['text'])) {
            throw new InvalidArgumentException('Не передан текст статьи');
        }

        $this->setName($fields['name']);
        $this->setText($fields['text']);

        $this->save();

        return $this;
    }
*/
}